# Generated by Django 3.2.4 on 2023-02-13 11:09

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=255, unique=True, verbose_name='Имя Пользователя')),
                ('middle_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Отчество')),
                ('type', models.CharField(choices=[('user', 'Пользователь'), ('support', 'Саппорт')], max_length=20, verbose_name='Тип аккаунта')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserAdditionalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('sex', models.CharField(blank=True, choices=[('Муж', 'Мужской'), ('Жен', 'Женский')], default='Муж', max_length=30, verbose_name='Пол')),
                ('passport_photo_reversal', models.ImageField(blank=True, upload_to='passport_photo_reversal', verbose_name='Фото разворота паспорта')),
                ('passport_photo_registered_address', models.ImageField(blank=True, upload_to='passport_photo_reversal', verbose_name='Фото страницы с пропиской')),
                ('registered_address', models.CharField(blank=True, max_length=250, null=True, verbose_name='Прописка')),
                ('passport_series', models.CharField(blank=True, max_length=4, null=True, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.RegexValidator('^[0-9]+$')], verbose_name='Серия паспорта')),
                ('passport_number', models.CharField(default='', max_length=6, validators=[django.core.validators.MinLengthValidator(6), django.core.validators.RegexValidator('^[0-9]+$')], verbose_name='Номер паспорта')),
                ('subdivision_code', models.CharField(default='', max_length=7, validators=[django.core.validators.MinLengthValidator(7)], verbose_name='Код подразделения')),
                ('date_of_issue', models.DateField(blank=True, null=True, verbose_name='Дата выдачи паспорта')),
                ('user', models.OneToOneField(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Дополнительная информация о пользователе',
                'verbose_name_plural': 'Дополнительная информация о пользователе',
            },
        ),
    ]
